// generated with ast extension for cup
// version 0.8
// 27/5/2023 20:15:31


package rs.ac.bg.etf.pp1.ast;

public interface Visitor { 

    public void visit(Unmatched Unmatched);
    public void visit(SomeVarList SomeVarList);
    public void visit(CondTermCondFactList CondTermCondFactList);
    public void visit(ActParsExprList ActParsExprList);
    public void visit(ReturnType ReturnType);
    public void visit(DesignatorAssign DesignatorAssign);
    public void visit(Mulop Mulop);
    public void visit(Matched Matched);
    public void visit(Relop Relop);
    public void visit(ArrayList ArrayList);
    public void visit(SomeConst SomeConst);
    public void visit(StatementList StatementList);
    public void visit(Addop Addop);
    public void visit(SomeVar SomeVar);
    public void visit(Factor Factor);
    public void visit(CondTerm CondTerm);
    public void visit(SingleTerm SingleTerm);
    public void visit(DeclList DeclList);
    public void visit(Designator Designator);
    public void visit(FormParsVarList FormParsVarList);
    public void visit(Term Term);
    public void visit(ActParsHelper ActParsHelper);
    public void visit(Condition Condition);
    public void visit(ConditionCondTermList ConditionCondTermList);
    public void visit(IfCondition IfCondition);
    public void visit(FormParams FormParams);
    public void visit(SomeDesignator SomeDesignator);
    public void visit(VarDeclList VarDeclList);
    public void visit(Expr Expr);
    public void visit(DesignatorStatement DesignatorStatement);
    public void visit(Statement Statement);
    public void visit(ConstDecl ConstDecl);
    public void visit(CondFact CondFact);
    public void visit(MethodDeclList MethodDeclList);
    public void visit(SomeForm SomeForm);
    public void visit(SomeConstList SomeConstList);
    public void visit(IfElse IfElse);
    public void visit(DesignatorStatementDec DesignatorStatementDec);
    public void visit(DesignatorStatementInc DesignatorStatementInc);
    public void visit(DesignatorStatementMethod DesignatorStatementMethod);
    public void visit(DesignatorStatementAssignopExpr DesignatorStatementAssignopExpr);
    public void visit(DesignatorError DesignatorError);
    public void visit(DesignatorMatrix DesignatorMatrix);
    public void visit(DesignatorArray DesignatorArray);
    public void visit(DesignatorSingle DesignatorSingle);
    public void visit(DesignatorAssignError DesignatorAssignError);
    public void visit(DesignatorAssignNoError DesignatorAssignNoError);
    public void visit(NoElseDummy NoElseDummy);
    public void visit(MulopPerc MulopPerc);
    public void visit(MulopDiv MulopDiv);
    public void visit(MulopMul MulopMul);
    public void visit(DesignatorName DesignatorName);
    public void visit(ElseDummy ElseDummy);
    public void visit(IfDummy IfDummy);
    public void visit(WhileDummy WhileDummy);
    public void visit(MapDummy MapDummy);
    public void visit(MapEndDummy MapEndDummy);
    public void visit(StatementBraces StatementBraces);
    public void visit(StatementMap StatementMap);
    public void visit(StatementPrintWith StatementPrintWith);
    public void visit(StatementPrintWithout StatementPrintWithout);
    public void visit(StatementRead StatementRead);
    public void visit(StatementReturnWith StatementReturnWith);
    public void visit(StatementReturnWithout StatementReturnWithout);
    public void visit(StatementCont StatementCont);
    public void visit(StatementBreak StatementBreak);
    public void visit(StatementWhile StatementWhile);
    public void visit(StatementIfElse StatementIfElse);
    public void visit(StatementIf StatementIf);
    public void visit(StatementDesignator StatementDesignator);
    public void visit(IfConditionError IfConditionError);
    public void visit(IfConditionNoError IfConditionNoError);
    public void visit(CondFactWith CondFactWith);
    public void visit(CondFactWithout CondFactWithout);
    public void visit(RelopELess RelopELess);
    public void visit(RelopLess RelopLess);
    public void visit(RelopEGre RelopEGre);
    public void visit(RelopGre RelopGre);
    public void visit(RelopNEq RelopNEq);
    public void visit(RelopEq RelopEq);
    public void visit(DummyOr DummyOr);
    public void visit(DummyAnd DummyAnd);
    public void visit(CondTermEmpty CondTermEmpty);
    public void visit(CondTermNoEmpty CondTermNoEmpty);
    public void visit(ConditionEmpty ConditionEmpty);
    public void visit(ConditionNoEmpty ConditionNoEmpty);
    public void visit(Cond Cond);
    public void visit(Assignop Assignop);
    public void visit(Label Label);
    public void visit(AddopMinus AddopMinus);
    public void visit(AddopPlus AddopPlus);
    public void visit(ArrayListEmpty ArrayListEmpty);
    public void visit(ArrayListNoEmpty ArrayListNoEmpty);
    public void visit(ActParsHelperEmpty ActParsHelperEmpty);
    public void visit(ActParsHelperNoEmpty ActParsHelperNoEmpty);
    public void visit(MethodName MethodName);
    public void visit(FactorChar FactorChar);
    public void visit(FactorNumber FactorNumber);
    public void visit(FactorBool FactorBool);
    public void visit(FactorNewMatrixExpr FactorNewMatrixExpr);
    public void visit(FactorExpr FactorExpr);
    public void visit(FactorNewExpr FactorNewExpr);
    public void visit(FactorMethod FactorMethod);
    public void visit(FactorDesignatorNo FactorDesignatorNo);
    public void visit(TermMulopFactor TermMulopFactor);
    public void visit(TermFactor TermFactor);
    public void visit(SingleTermNeg SingleTermNeg);
    public void visit(SingleTermNoNeg SingleTermNoNeg);
    public void visit(ExprTerm ExprTerm);
    public void visit(ExprAddop ExprAddop);
    public void visit(ActParsExprListEmpty ActParsExprListEmpty);
    public void visit(ActParsExprListNoEmpty ActParsExprListNoEmpty);
    public void visit(SomeFormError SomeFormError);
    public void visit(SomeFormEmpty SomeFormEmpty);
    public void visit(SomeFormWithout SomeFormWithout);
    public void visit(SomeFormWith SomeFormWith);
    public void visit(FormParsVarListEmpty FormParsVarListEmpty);
    public void visit(FormParsVarListNoEmpty FormParsVarListNoEmpty);
    public void visit(FormPars FormPars);
    public void visit(StatementListEmpty StatementListEmpty);
    public void visit(StatementListNoEmpty StatementListNoEmpty);
    public void visit(VarDeclListEmpty VarDeclListEmpty);
    public void visit(VarDeclListNoEmpty VarDeclListNoEmpty);
    public void visit(MethodTypeName MethodTypeName);
    public void visit(FormParamsEmpty FormParamsEmpty);
    public void visit(FormParamsNoEmpty FormParamsNoEmpty);
    public void visit(ReturnTypeVoid ReturnTypeVoid);
    public void visit(ReturnTypeType ReturnTypeType);
    public void visit(MethodDecl MethodDecl);
    public void visit(SomeVarListEmpty SomeVarListEmpty);
    public void visit(SomeVarListNoEmpty SomeVarListNoEmpty);
    public void visit(SomeVarError SomeVarError);
    public void visit(SomeVarEmpty SomeVarEmpty);
    public void visit(SomeVarWithout SomeVarWithout);
    public void visit(SomeVarWith SomeVarWith);
    public void visit(VarDecl VarDecl);
    public void visit(Type Type);
    public void visit(NumberConst NumberConst);
    public void visit(BoolConst BoolConst);
    public void visit(CharConst CharConst);
    public void visit(SomeConstListEmpty SomeConstListEmpty);
    public void visit(SomeConstListNoEmpty SomeConstListNoEmpty);
    public void visit(ConstDeclNum ConstDeclNum);
    public void visit(MethodDeclListEmpty MethodDeclListEmpty);
    public void visit(MethodDeclListNoEmpty MethodDeclListNoEmpty);
    public void visit(DeclListEmpty DeclListEmpty);
    public void visit(DeclListVarDecl DeclListVarDecl);
    public void visit(DeclListConst DeclListConst);
    public void visit(ProgramName ProgramName);
    public void visit(Program Program);

}
